Q1. What do you mean by Data Structures?
-Data structure is a storage that is used to store and organize data.
It is a way of arranging data on a computer so that it can be accessed and updated efficiently.

Q2. Define The Goals Of Data Structure?
---------------------------------------
The goal of study of data structure is to:-

A data structure is a data organization, management and storage format that enable efficient access and modification.
More precisely, a data structure is a collection of data values, the relationships among them, and the functions or operations that can be applied to the data.
1) Identify and develop useful mathematical entities and operations and to determine what classes of problems can be solved by using these entities:-
An algorithm is an unambiguous specification of how to solve a class of problems. Algorithms can perform calculation, data processing and automated reasoning tasks.

2) Determine representations for those abstract entities and to implement the abstract operations on these concrete representations:-
An abstract data type is a mathematical model for data types, where a data type is defined by its behavior from the point of view of a user of the data, specifically in terms of possible values, possible operations on data of this type, and the behavior of these operations. This contrasts with data structures, which are concrete representations of data, and are the point of view of an implementer, not a user.



Q3 What is the Need of DS?
--------------------------
Speed: Speed is an important factor when we are processing the data. Suppose an organization has thousands of employee records and they want to look up to an employee record, the process needs to be fast as possible to save time, nobody is willing to spend 10 minutes to look up a record in database.

Data structures allows faster retrieval, addition, deletion and modification of records.

Save disk space: When we are dealing with large amount of data, it becomes important to save the disk space as much as possible. Data structure allows efficient storing of data thus allows disk space saving.

Handling multiple requests: Data structure allows multiple data processing requests. For example, one person fetching the record while other person is simultaneously updating the data. Data structure allows multiple users to handle, access and modify data simultaneously.


Q4. List out the areas in which data structures are applied extensively(real time examples)?
--------------------------------------------------------------------------------------------
Compiler Design,
Operating System,
Database Management System,
Statistical analysis package,
Numerical Analysis,
Graphics,
Artificial Intelligence,
and Simulation.


Q5. List different types of data structures.
-------------------------------------------
-Linear: arrays, lists
Tree: binary, heaps, space partitioning etc.
Hash: distributed hash table, hash tree etc.
Graphs: decision, directed, acyclic etc.


Q6. What Does Abstract Data Type Mean?
--------------------------------------
An abstract data type (ADT) describes the expected behaviour associated with a concrete data structure. For example, a ‘list’ is an abstract data type which represents a countable number of ordered values, but again the implementation of such a data type could be implemented using a variety of different data structures, one being a ‘linked list’.

The abstract datatype is special kind of datatype, whose behavior is defined by a set of values and set of operations. The keyword “Abstract” is used as we can use these datatypes, we can perform different operations. But how those operations are working that is totally hidden from the user. The ADT is made of with primitive datatypes, but operation logics are hidden.

Some examples of ADT are Stack, Queue, List etc.

Let us see some operations of those mentioned ADT −

Stack −
	isFull(), This is used to check whether stack is full or not
	isEmpry(), This is used to check whether stack is empty or not
	push(x), This is used to push x into the stack
	pop(), This is used to delete one element from top of the stack
	peek(), This is used to get the top most element of the stack
	size(), this function is used to get number of elements present into the stack
Queue −
	isFull(), This is used to check whether queue is full or not
	isEmpry(), This is used to check whether queue is empty or not
	insert(x), This is used to add x into the queue at the rear end
	delete(), This is used to delete one element from the front end of the queue
	size(), this function is used to get number of elements present into the queue
List −
	size(), this function is used to get number of elements present into the list
	insert(x), this function is used to insert one element into the list
	remove(x), this function is used to remove given element from the list
	get(i), this function is used to get element at position i
	replace(x, y), this function is used to replace x with y value

